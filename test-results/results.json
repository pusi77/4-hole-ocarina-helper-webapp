{
  "numTotalTestSuites": 32,
  "numPassedTestSuites": 32,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 98,
  "numPassedTests": 98,
  "numFailedTests": 0,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1756316039936,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Core Functionality"],
          "fullName": "Core Functionality should verify core components can be instantiated",
          "status": "passed",
          "title": "should verify core components can be instantiated",
          "duration": 3.238373000000138,
          "failureMessages": [],
          "location": { "line": 10, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["Core Functionality"],
          "fullName": "Core Functionality should handle basic note parsing",
          "status": "passed",
          "title": "should handle basic note parsing",
          "duration": 2.6009120000001076,
          "failureMessages": [],
          "location": { "line": 22, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["Core Functionality"],
          "fullName": "Core Functionality should get fingering patterns",
          "status": "passed",
          "title": "should get fingering patterns",
          "duration": 0.7468830000000253,
          "failureMessages": [],
          "location": { "line": 30, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041374,
      "endTime": 1756316041380.7468,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/__tests__/TestSuite.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for F (all holes covered)",
          "status": "passed",
          "title": "should return correct fingering pattern for F (all holes covered)",
          "duration": 3.0481750000001284,
          "failureMessages": [],
          "location": { "line": 20, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for G (top-left, bottom-left, bottom-right)",
          "status": "passed",
          "title": "should return correct fingering pattern for G (top-left, bottom-left, bottom-right)",
          "duration": 0.5590070000000651,
          "failureMessages": [],
          "location": { "line": 28, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for A (top-left, top-right, bottom-left)",
          "status": "passed",
          "title": "should return correct fingering pattern for A (top-left, top-right, bottom-left)",
          "duration": 0.44552199999998265,
          "failureMessages": [],
          "location": { "line": 36, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for Bb (top-left, bottom-left)",
          "status": "passed",
          "title": "should return correct fingering pattern for Bb (top-left, bottom-left)",
          "duration": 0.41959399999996094,
          "failureMessages": [],
          "location": { "line": 44, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for C (bottom-left, bottom-right)",
          "status": "passed",
          "title": "should return correct fingering pattern for C (bottom-left, bottom-right)",
          "duration": 0.3652640000000247,
          "failureMessages": [],
          "location": { "line": 52, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for D (bottom-left only)",
          "status": "passed",
          "title": "should return correct fingering pattern for D (bottom-left only)",
          "duration": 0.2879849999999351,
          "failureMessages": [],
          "location": { "line": 60, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return correct fingering pattern for E (top-right only)",
          "status": "passed",
          "title": "should return correct fingering pattern for E (top-right only)",
          "duration": 0.24418500000001586,
          "failureMessages": [],
          "location": { "line": 68, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should return null for unsupported notes",
          "status": "passed",
          "title": "should return null for unsupported notes",
          "duration": 0.44590100000004895,
          "failureMessages": [],
          "location": { "line": 76, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPattern"],
          "fullName": "FingeringEngine getPattern should handle whitespace in note names",
          "status": "passed",
          "title": "should handle whitespace in note names",
          "duration": 0.4690890000001673,
          "failureMessages": [],
          "location": { "line": 83, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPatterns"],
          "fullName": "FingeringEngine getPatterns should return patterns for multiple valid notes",
          "status": "passed",
          "title": "should return patterns for multiple valid notes",
          "duration": 1.6140219999999772,
          "failureMessages": [],
          "location": { "line": 93, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPatterns"],
          "fullName": "FingeringEngine getPatterns should return null for unsupported notes in array",
          "status": "passed",
          "title": "should return null for unsupported notes in array",
          "duration": 0.44475099999999657,
          "failureMessages": [],
          "location": { "line": 101, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getPatterns"],
          "fullName": "FingeringEngine getPatterns should handle empty array",
          "status": "passed",
          "title": "should handle empty array",
          "duration": 0.20036700000014207,
          "failureMessages": [],
          "location": { "line": 109, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "isSupported"],
          "fullName": "FingeringEngine isSupported should return true for all supported notes",
          "status": "passed",
          "title": "should return true for all supported notes",
          "duration": 0.41161200000010467,
          "failureMessages": [],
          "location": { "line": 116, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "isSupported"],
          "fullName": "FingeringEngine isSupported should return false for unsupported notes",
          "status": "passed",
          "title": "should return false for unsupported notes",
          "duration": 0.32925299999988056,
          "failureMessages": [],
          "location": { "line": 122, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "isSupported"],
          "fullName": "FingeringEngine isSupported should handle whitespace in note names",
          "status": "passed",
          "title": "should handle whitespace in note names",
          "duration": 0.17095799999992778,
          "failureMessages": [],
          "location": { "line": 129, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "isSupported"],
          "fullName": "FingeringEngine isSupported should handle empty string",
          "status": "passed",
          "title": "should handle empty string",
          "duration": 0.12501799999995455,
          "failureMessages": [],
          "location": { "line": 134, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getSupportedNotes"],
          "fullName": "FingeringEngine getSupportedNotes should return all supported notes",
          "status": "passed",
          "title": "should return all supported notes",
          "duration": 0.19099499999992986,
          "failureMessages": [],
          "location": { "line": 140, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getSupportedNotes"],
          "fullName": "FingeringEngine getSupportedNotes should return readonly array",
          "status": "passed",
          "title": "should return readonly array",
          "duration": 0.17232100000001083,
          "failureMessages": [],
          "location": { "line": 145, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "validateNotes"],
          "fullName": "FingeringEngine validateNotes should return valid result for all supported notes",
          "status": "passed",
          "title": "should return valid result for all supported notes",
          "duration": 0.4734689999997954,
          "failureMessages": [],
          "location": { "line": 155, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "validateNotes"],
          "fullName": "FingeringEngine validateNotes should return invalid result with errors for unsupported notes",
          "status": "passed",
          "title": "should return invalid result with errors for unsupported notes",
          "duration": 0.9492230000000745,
          "failureMessages": [],
          "location": { "line": 162, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "validateNotes"],
          "fullName": "FingeringEngine validateNotes should provide suggestions for common note conversions",
          "status": "passed",
          "title": "should provide suggestions for common note conversions",
          "duration": 0.24572199999988698,
          "failureMessages": [],
          "location": { "line": 172, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "validateNotes"],
          "fullName": "FingeringEngine validateNotes should handle multiple unsupported notes",
          "status": "passed",
          "title": "should handle multiple unsupported notes",
          "duration": 0.37623900000016874,
          "failureMessages": [],
          "location": { "line": 177, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "validateNotes"],
          "fullName": "FingeringEngine validateNotes should handle empty array",
          "status": "passed",
          "title": "should handle empty array",
          "duration": 0.4461719999999332,
          "failureMessages": [],
          "location": { "line": 185, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getAllPatterns"],
          "fullName": "FingeringEngine getAllPatterns should return all fingering patterns",
          "status": "passed",
          "title": "should return all fingering patterns",
          "duration": 0.7879639999998744,
          "failureMessages": [],
          "location": { "line": 193, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "getAllPatterns"],
          "fullName": "FingeringEngine getAllPatterns should return readonly patterns",
          "status": "passed",
          "title": "should return readonly patterns",
          "duration": 0.5758250000001226,
          "failureMessages": [],
          "location": { "line": 205, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "fingering pattern accuracy"],
          "fullName": "FingeringEngine fingering pattern accuracy should have exactly 4 holes for each pattern",
          "status": "passed",
          "title": "should have exactly 4 holes for each pattern",
          "duration": 1.413372999999865,
          "failureMessages": [],
          "location": { "line": 221, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "fingering pattern accuracy"],
          "fullName": "FingeringEngine fingering pattern accuracy should have unique patterns for each note",
          "status": "passed",
          "title": "should have unique patterns for each note",
          "duration": 0.350065000000086,
          "failureMessages": [],
          "location": { "line": 231, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "fingering pattern accuracy"],
          "fullName": "FingeringEngine fingering pattern accuracy should match exact requirements from specification",
          "status": "passed",
          "title": "should match exact requirements from specification",
          "duration": 0.48752799999988383,
          "failureMessages": [],
          "location": { "line": 240, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "singleton instance"],
          "fullName": "FingeringEngine singleton instance should provide a default singleton instance",
          "status": "passed",
          "title": "should provide a default singleton instance",
          "duration": 0.3597110000000612,
          "failureMessages": [],
          "location": { "line": 268, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "singleton instance"],
          "fullName": "FingeringEngine singleton instance should return same patterns as new instance",
          "status": "passed",
          "title": "should return same patterns as new instance",
          "duration": 0.16560099999992417,
          "failureMessages": [],
          "location": { "line": 281, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "edge cases"],
          "fullName": "FingeringEngine edge cases should handle case sensitivity correctly",
          "status": "passed",
          "title": "should handle case sensitivity correctly",
          "duration": 0.2406940000000759,
          "failureMessages": [],
          "location": { "line": 290, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "edge cases"],
          "fullName": "FingeringEngine edge cases should handle special characters",
          "status": "passed",
          "title": "should handle special characters",
          "duration": 0.29749599999991005,
          "failureMessages": [],
          "location": { "line": 296, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["FingeringEngine", "edge cases"],
          "fullName": "FingeringEngine edge cases should provide meaningful suggestions for common mistakes",
          "status": "passed",
          "title": "should provide meaningful suggestions for common mistakes",
          "duration": 0.39360499999997955,
          "failureMessages": [],
          "location": { "line": 302, "column": 5 },
          "meta": {}
        }
      ],
      "startTime": 1756316041376,
      "endTime": 1756316041395.3936,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/core/__tests__/FingeringEngine.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should parse a simple song correctly",
          "status": "passed",
          "title": "should parse a simple song correctly",
          "duration": 4.9227820000000975,
          "failureMessages": [],
          "location": { "line": 17, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should handle title with prefix",
          "status": "passed",
          "title": "should handle title with prefix",
          "duration": 0.875112000000172,
          "failureMessages": [],
          "location": { "line": 35, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should handle song with prefix",
          "status": "passed",
          "title": "should handle song with prefix",
          "duration": 0.44891099999995276,
          "failureMessages": [],
          "location": { "line": 43, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should use default title for untitled songs",
          "status": "passed",
          "title": "should use default title for untitled songs",
          "duration": 0.30747900000005757,
          "failureMessages": [],
          "location": { "line": 51, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should handle various note separators",
          "status": "passed",
          "title": "should handle various note separators",
          "duration": 0.5599029999998493,
          "failureMessages": [],
          "location": { "line": 60, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should skip empty lines",
          "status": "passed",
          "title": "should skip empty lines",
          "duration": 0.5394720000001598,
          "failureMessages": [],
          "location": { "line": 76, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "parseSong"],
          "fullName": "NoteParser parseSong should throw error for invalid input",
          "status": "passed",
          "title": "should throw error for invalid input",
          "duration": 1.153634000000011,
          "failureMessages": [],
          "location": { "line": 92, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should validate correct input",
          "status": "passed",
          "title": "should validate correct input",
          "duration": 1.146073000000115,
          "failureMessages": [],
          "location": { "line": 99, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should reject empty input",
          "status": "passed",
          "title": "should reject empty input",
          "duration": 1.0286089999999604,
          "failureMessages": [],
          "location": { "line": 109, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should reject whitespace-only input",
          "status": "passed",
          "title": "should reject whitespace-only input",
          "duration": 0.34399200000007113,
          "failureMessages": [],
          "location": { "line": 118, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should require title and notes",
          "status": "passed",
          "title": "should require title and notes",
          "duration": 0.27159199999982775,
          "failureMessages": [],
          "location": { "line": 124, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should detect unsupported notes",
          "status": "passed",
          "title": "should detect unsupported notes",
          "duration": 0.5246159999999236,
          "failureMessages": [],
          "location": { "line": 133, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should warn about B to Bb conversion",
          "status": "passed",
          "title": "should warn about B to Bb conversion",
          "duration": 0.49453700000003664,
          "failureMessages": [],
          "location": { "line": 146, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should warn about empty lines",
          "status": "passed",
          "title": "should warn about empty lines",
          "duration": 0.33596699999998236,
          "failureMessages": [],
          "location": { "line": 159, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should enforce line limits",
          "status": "passed",
          "title": "should enforce line limits",
          "duration": 0.2690709999999399,
          "failureMessages": [],
          "location": { "line": 171, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "validateInput"],
          "fullName": "NoteParser validateInput should enforce notes per line limits",
          "status": "passed",
          "title": "should enforce notes per line limits",
          "duration": 0.23309099999983118,
          "failureMessages": [],
          "location": { "line": 184, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "convertNotes"],
          "fullName": "NoteParser convertNotes should convert B to Bb",
          "status": "passed",
          "title": "should convert B to Bb",
          "duration": 0.5168220000000474,
          "failureMessages": [],
          "location": { "line": 196, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "convertNotes"],
          "fullName": "NoteParser convertNotes should convert multiple B notes",
          "status": "passed",
          "title": "should convert multiple B notes",
          "duration": 0.39400300000011157,
          "failureMessages": [],
          "location": { "line": 203, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "convertNotes"],
          "fullName": "NoteParser convertNotes should handle case insensitive B",
          "status": "passed",
          "title": "should handle case insensitive B",
          "duration": 0.390177999999878,
          "failureMessages": [],
          "location": { "line": 209, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "convertNotes"],
          "fullName": "NoteParser convertNotes should not convert when autoConvertB is false",
          "status": "passed",
          "title": "should not convert when autoConvertB is false",
          "duration": 0.3934280000000854,
          "failureMessages": [],
          "location": { "line": 215, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "convertNotes"],
          "fullName": "NoteParser convertNotes should leave other notes unchanged",
          "status": "passed",
          "title": "should leave other notes unchanged",
          "duration": 0.5222689999998238,
          "failureMessages": [],
          "location": { "line": 222, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "static methods"],
          "fullName": "NoteParser static methods should return supported notes",
          "status": "passed",
          "title": "should return supported notes",
          "duration": 0.26344399999993584,
          "failureMessages": [],
          "location": { "line": 238, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "static methods"],
          "fullName": "NoteParser static methods should check if note is supported",
          "status": "passed",
          "title": "should check if note is supported",
          "duration": 0.35074600000007194,
          "failureMessages": [],
          "location": { "line": 243, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "edge cases"],
          "fullName": "NoteParser edge cases should handle mixed case notes",
          "status": "passed",
          "title": "should handle mixed case notes",
          "duration": 0.3413140000000112,
          "failureMessages": [],
          "location": { "line": 252, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "edge cases"],
          "fullName": "NoteParser edge cases should handle extra whitespace",
          "status": "passed",
          "title": "should handle extra whitespace",
          "duration": 0.6549740000000384,
          "failureMessages": [],
          "location": { "line": 260, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "edge cases"],
          "fullName": "NoteParser edge cases should handle Windows line endings",
          "status": "passed",
          "title": "should handle Windows line endings",
          "duration": 0.34179900000003727,
          "failureMessages": [],
          "location": { "line": 273, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "edge cases"],
          "fullName": "NoteParser edge cases should handle single note lines",
          "status": "passed",
          "title": "should handle single note lines",
          "duration": 0.318798999999899,
          "failureMessages": [],
          "location": { "line": 283, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "edge cases"],
          "fullName": "NoteParser edge cases should provide detailed error positions",
          "status": "passed",
          "title": "should provide detailed error positions",
          "duration": 0.4102709999999661,
          "failureMessages": [],
          "location": { "line": 293, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "configuration options"],
          "fullName": "NoteParser configuration options should respect strictValidation setting",
          "status": "passed",
          "title": "should respect strictValidation setting",
          "duration": 0.3100299999998697,
          "failureMessages": [],
          "location": { "line": 307, "column": 5 },
          "meta": {}
        },
        {
          "ancestorTitles": ["NoteParser", "configuration options"],
          "fullName": "NoteParser configuration options should respect custom limits",
          "status": "passed",
          "title": "should respect custom limits",
          "duration": 0.2926629999999477,
          "failureMessages": [],
          "location": { "line": 314, "column": 5 },
          "meta": {}
        }
      ],
      "startTime": 1756316041387,
      "endTime": 1756316041407.2927,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/core/__tests__/NoteParser.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should create an instance",
          "status": "passed",
          "title": "should create an instance",
          "duration": 2.8688220000001365,
          "failureMessages": [],
          "location": { "line": 71, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should calculate layout",
          "status": "passed",
          "title": "should calculate layout",
          "duration": 1.4360449999999219,
          "failureMessages": [],
          "location": { "line": 75, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should render to canvas",
          "status": "passed",
          "title": "should render to canvas",
          "duration": 2.1538130000001274,
          "failureMessages": [],
          "location": { "line": 84, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should export to PNG",
          "status": "passed",
          "title": "should export to PNG",
          "duration": 1.8376470000000609,
          "failureMessages": [],
          "location": { "line": 130, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should get data URL",
          "status": "passed",
          "title": "should get data URL",
          "duration": 0.6368780000000243,
          "failureMessages": [],
          "location": { "line": 135, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ChartRenderer"],
          "fullName": "ChartRenderer should handle empty song",
          "status": "passed",
          "title": "should handle empty song",
          "duration": 0.5666240000000471,
          "failureMessages": [],
          "location": { "line": 142, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041354,
      "endTime": 1756316041363.5667,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/renderer/__tests__/ChartRenderer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ErrorHandlingManager"],
          "fullName": "ErrorHandlingManager should create an instance",
          "status": "passed",
          "title": "should create an instance",
          "duration": 3.132921000000124,
          "failureMessages": [],
          "location": { "line": 22, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ErrorHandlingManager"],
          "fullName": "ErrorHandlingManager should handle valid validation result",
          "status": "passed",
          "title": "should handle valid validation result",
          "duration": 2.606879999999819,
          "failureMessages": [],
          "location": { "line": 26, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ErrorHandlingManager"],
          "fullName": "ErrorHandlingManager should handle validation errors",
          "status": "passed",
          "title": "should handle validation errors",
          "duration": 2.374025000000074,
          "failureMessages": [],
          "location": { "line": 41, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ErrorHandlingManager"],
          "fullName": "ErrorHandlingManager should handle validation warnings",
          "status": "passed",
          "title": "should handle validation warnings",
          "duration": 1.2156620000000657,
          "failureMessages": [],
          "location": { "line": 63, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["ErrorHandlingManager"],
          "fullName": "ErrorHandlingManager should clear errors",
          "status": "passed",
          "title": "should clear errors",
          "duration": 2.0247239999998783,
          "failureMessages": [],
          "location": { "line": 84, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041475,
      "endTime": 1756316041487.0247,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/ui/__tests__/ErrorHandlingManager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should create an instance",
          "status": "passed",
          "title": "should create an instance",
          "duration": 2.918271999999888,
          "failureMessages": [],
          "location": { "line": 24, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should handle text operations",
          "status": "passed",
          "title": "should handle text operations",
          "duration": 5.277362000000039,
          "failureMessages": [],
          "location": { "line": 28, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should clear text",
          "status": "passed",
          "title": "should clear text",
          "duration": 0.8765829999999823,
          "failureMessages": [],
          "location": { "line": 45, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should trigger file picker",
          "status": "passed",
          "title": "should trigger file picker",
          "duration": 2.1588700000002063,
          "failureMessages": [],
          "location": { "line": 52, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should get all examples",
          "status": "passed",
          "title": "should get all examples",
          "duration": 1.0077789999998004,
          "failureMessages": [],
          "location": { "line": 56, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should clear example selection",
          "status": "passed",
          "title": "should clear example selection",
          "duration": 1.2703579999999874,
          "failureMessages": [],
          "location": { "line": 61, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["InputManager"],
          "fullName": "InputManager should destroy properly",
          "status": "passed",
          "title": "should destroy properly",
          "duration": 0.9739039999999477,
          "failureMessages": [],
          "location": { "line": 65, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041444,
      "endTime": 1756316041459.9739,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/ui/__tests__/InputManager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should create an instance",
          "status": "passed",
          "title": "should create an instance",
          "duration": 2.5734820000000127,
          "failureMessages": [],
          "location": { "line": 16, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should initialize with default state",
          "status": "passed",
          "title": "should initialize with default state",
          "duration": 1.2537419999998747,
          "failureMessages": [],
          "location": { "line": 20, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should update input text",
          "status": "passed",
          "title": "should update input text",
          "duration": 0.9069730000001073,
          "failureMessages": [],
          "location": { "line": 30, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should set loading state",
          "status": "passed",
          "title": "should set loading state",
          "duration": 0.47319100000004255,
          "failureMessages": [],
          "location": { "line": 38, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should add and remove listeners",
          "status": "passed",
          "title": "should add and remove listeners",
          "duration": 1.3092679999999746,
          "failureMessages": [],
          "location": { "line": 45, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["StateManager"],
          "fullName": "StateManager should destroy properly",
          "status": "passed",
          "title": "should destroy properly",
          "duration": 2.0207419999999274,
          "failureMessages": [],
          "location": { "line": 56, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041351,
      "endTime": 1756316041360.0208,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/ui/__tests__/StateManager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["debounce"],
          "fullName": "debounce should delay function execution",
          "status": "passed",
          "title": "should delay function execution",
          "duration": 8.184445000000096,
          "failureMessages": [],
          "location": { "line": 18, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["debounce"],
          "fullName": "debounce should reset delay on subsequent calls",
          "status": "passed",
          "title": "should reset delay on subsequent calls",
          "duration": 2.2007900000000973,
          "failureMessages": [],
          "location": { "line": 33, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["debounce"],
          "fullName": "debounce should execute immediately when immediate=true",
          "status": "passed",
          "title": "should execute immediately when immediate=true",
          "duration": 1.2591930000000957,
          "failureMessages": [],
          "location": { "line": 49, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["debounce"],
          "fullName": "debounce should handle multiple arguments",
          "status": "passed",
          "title": "should handle multiple arguments",
          "duration": 0.9108710000000428,
          "failureMessages": [],
          "location": { "line": 67, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["throttle"],
          "fullName": "throttle should execute function immediately on first call",
          "status": "passed",
          "title": "should execute function immediately on first call",
          "duration": 1.60044199999993,
          "failureMessages": [],
          "location": { "line": 88, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["throttle"],
          "fullName": "throttle should prevent execution during throttle period",
          "status": "passed",
          "title": "should prevent execution during throttle period",
          "duration": 1.3422689999999875,
          "failureMessages": [],
          "location": { "line": 97, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["throttle"],
          "fullName": "throttle should allow execution after throttle period",
          "status": "passed",
          "title": "should allow execution after throttle period",
          "duration": 1.161546000000044,
          "failureMessages": [],
          "location": { "line": 109, "column": 3 },
          "meta": {}
        },
        {
          "ancestorTitles": ["throttle"],
          "fullName": "throttle should handle multiple arguments",
          "status": "passed",
          "title": "should handle multiple arguments",
          "duration": 0.7885939999998755,
          "failureMessages": [],
          "location": { "line": 122, "column": 3 },
          "meta": {}
        }
      ],
      "startTime": 1756316041331,
      "endTime": 1756316041349.7886,
      "status": "passed",
      "message": "",
      "name": "/home/pusi77/Projects/Personal/4-hole-ocarina-helper-webapp/src/utils/__tests__/debounce.test.ts"
    }
  ]
}
